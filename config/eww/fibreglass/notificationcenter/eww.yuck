

;; Time
;;(defpoll curtime :interval "2s" "date '+%I:%M'")
;;(defpoll curtimetwo :interval "2s" "date '+%p'")
;;(defpoll curtimelong :interval "10s" "date '+%A %_d of %B, %Y.'")

;; Calendar
;;(defpoll calendar_day :interval "3s" "date '+%d'")
;;(defpoll calendar_month :interval "3s" "date '+%m'")
;;(defpoll calendar_year :interval "3s" "date '+%Y'")

;; Notification center
(deflisten notif_script "./fibreglass/notificationcenter/scripts/notifications")

(defwidget notification_single [?title ?content ?image ?id]
  (box :orientation 'h' 
    :space-evenly 'false' 
    :class "notif_box" 
    (box :style "background-image: url('${image}');"
      :class 'notif_image'
      :space-evenly 'false'
      :vexpand 'false'
      :halign 'start'
      :valign 'center'
    )
    (box :orientation 'v'
      :space-evenly 'false' 
      (box :orientation 'h' 
        :space-evenly 'false' 
        (scroll :hexpand 'true' 
          :hscroll 'true' 
          :vscroll 'false' 
          :width 300 
          (label :halign 'start' 
            :xalign 0 
            :hexpand 'true' 
            :class 'notif_sum' 
            :text "${title}"
          )
        )
        (button :halign 'end' 
          :class 'notif_box_clear' 
          :onclick 'dunstctl history-rm ${id}' 
          '󰅖'
        )
      )
      (label :wrap true 
        :halign 'start' 
        :class 'notif_body' 
        :text "${content}"
      )
    )
  )
)


(defwidget notificationsboxnc []
  (box :orientation "v"
    :width 270
    :class "notif_main_box"
    :space-evenly "false"
    :spacing 1
    (box :orientation "h"
      :space-evenly "false"
      (label :halign "start" :class "notif_box_title" :text "Notifications")
      (button :halign "end" :class "notif_clear_button" :onclick "dunstctl history-clear" "󰎟  Clear")
    )
    (scroll :height 520
      (literal :content notif_script)
    )
  )
)

(defvar reloadstack 0)

(defwidget quicknc []
  (box :orientation "v"
    :space-evenly "false"
    :spacing 10
    :class "quick-box-nc"
    (stack :selected reloadstack
	  :transition "slideup"
	  :same-size true
	  :class "reloadnc-reload"
	  (eventbox :onhover "eww update reloadstack=1"
	    (label :text "󰑓  Reload Programs")
	  )
	  (eventbox :onhoverlost "eww update reloadstack=0"
		(box :orientation "h"
	      (button :class "reload-buttons" :onclick "bspc wm -r" "  bspwm")
	      (button :class "reload-buttons" :onclick "pkill -USR1 -x sxhkd" "  sxkhd")
	      (button :class "reload-buttons" :onclick "eww reload" "󱁉  eww")
		  (button :class "reload-buttons" :onclick "pkill dunst; dunst > /dev/null 2>&1 & disown" "󰎟  dunst")
	    )
	  )
    )
  )
)

(defwidget contentnc []
  (box :orientation "v"
    :space-evenly "false"
    :class "nc-main-box"
    :spacing 7
    (notificationsboxnc)
    (quicknc)
  )
)

(defwidget hoverlostnc []
  (eventbox :onhoverlost "./fibreglass/bar/scripts/open_notificationcenter.sh &"
    (contentnc)
  )
)

(defwindow notificationcenter
  :monitor 1 
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x "-1.6%"
              :y "-7.3%"
              :width "30px"
              :height "60%"
              :anchor "bottom right")
  (contentnc)
)

