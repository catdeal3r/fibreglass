
;; Top
(defpoll uptime :interval "1m" "./fibreglass/dashboard/scripts/uptime")

;; Tools network
(defpoll net_status :interval "300ms" "./fibreglass/dashboard/scripts/Network --status")
(defpoll net_icon :interval "300ms" "./fibreglass/dashboard/scripts/Network --icon")

;; Tools bluetooth
(defpoll blue_status :interval "300ms" "./fibreglass/dashboard/scripts/Bluetooth --status")
(defpoll blue_icon :interval "300ms" "./fibreglass/dashboard/scripts/Bluetooth --icon")

;; Tools nightmode 
(defpoll night_status :interval "300ms" "./fibreglass/dashboard/scripts/Nightmode --status")
(defpoll night_icon :interval "300ms" "./fibreglass/dashboard/scripts/Nightmode --icon")

;; Tools dnd 
(defpoll dnd_status :interval "300ms" "./fibreglass/dashboard/scripts/DND --status")
(defpoll dnd_icon :interval "300ms" "./fibreglass/dashboard/scripts/DND --icon")

;; Calendar
;;(defpoll calendar_day :interval "3s" "date '+%d'")
;;(defpoll calendar_month :interval "3s" "date '+%m'")
;;(defpoll calendar_year :interval "3s" "date '+%Y'")

;; Sliders
(defpoll sliders-volume :interval "100ms" "amixer get Master | grep -oP '\\d+%' | head -1 | tr -d '%'")
(defpoll sliders-brightness :interval "100ms" "brightnessctl i | grep -oP '(\\d+%)' | tr -d '% '")

;; Music controls 
(defpoll music-cover :interval "1s" "./fibreglass/dashboard/scripts/music --cover")
(defpoll music-title :interval "1s" "./fibreglass/dashboard/scripts/music --title")
(defpoll music-artist :interval "1s" "./fibreglass/dashboard/scripts/music --artist")
(defpoll playing-icon :interval "500ms" "./fibreglass/dashboard/scripts/music --playing-icon")

(defwidget topdb []
  (box :orientation "v"
    :space-evenly false
    :vexpand false 
    :spacing 17
    :width 120
    :class "top-box-db"
    (box :orientation "h" 
      :space-evenly "false"
      :spacing 10
      :class "top-box-db-two"
      :halign "start"
      :valign "center"
      (box :style "background-image: url('${PFP}');"
        :class "image-pfp-das"
        :halign "start"
        :valign "center"
      )
      (box :orientation "v"
        :space-evenly "false"
        :spacing 1
        :valign "center"
        :halign "start"
        :class "user-greeting-box"
        (label :halign "start" :class "user-greeting" :text "${user_name}") 
        (label :halign "start" :class "uptime-text" :text "Up: ${uptime}")
      )
      (box :orientation "h"
        :halign "center"
        :class "power-box-db"
        (button :class "power-box-button-db" 
          :onclick "$HOME/scripts/tools/lockbspwm --suspend"
          "󰤄"
        )
        (button :class "power-box-button-db" 
          :onclick "bspc quit"
          "󰗽"
        )
        (button :class "power-box-button-dan-db" 
          :onclick "systemctl poweroff"
          ""
        )
      )
    )
  )
)


(defwidget tool_single [?status ?tooltip ?icon ?exec ?name]
(box :orientation "v"
        :space-evenly true 
        :spacing 2
        :class "tools-main"
  (eventbox :class { status != "Off" ? "tool-btn-ani tool-btn" : "tool-btn-ani no-tool-btn" }
          :width 90
          :height 50
          :halign "start"
          :cursor "pointer"
          :tooltip "${tooltip}"
          (button :class "tool-button"
            :onclick "${exec}"
            (box :orientation "h"
              :space-evenly false
              :spacing 10
              (label :halign "start" :style { name != "Network" ? ( name != "Bluetooth" ? "margin-left: .5em;" : "margin-left: .7em; margin-right: 0em; font-size: .9em;" ) : "margin-left: .5em; margin-right: .3em; font-size: .9em;" } :text "${icon}")
              (scroll :hscroll false :vscroll false
                  (box :orientation "v"
                    :class "tool-button-text"
                    (label :halign "start" :class "tool-btn-text" :style "font-weight: 600;" :text "${name}")
                    (label :halign "start" :class "tool-btn-text" :text { name != "Network" ? ( status != "Off" ? "Turned On" : "Turned Off" ) : ( status != "Off" ? "Connected" : "Disconnected" ) })
                  )
              )
	      (label :class "tool-btn-text" :style "margin-right: .1em; font-size: .8em;" :halign "end" :text "")
            )
          )
  )
  )
)

(defwidget toolsdb []
  (box :orientation "v"
    :class "tools-sec"
    :spacing 15
    (box :orientation "h"
      :spacing 15
      (tool_single :status "${net_status}" :tooltip "Wifi toggle" :icon "${net_icon}" :exec "./fibreglass/dashboard/scripts/Network --toggle &" :name "Network")
      (tool_single :status "${blue_status}" :tooltip "Bluetooth toggle" :icon "${blue_icon}" :exec "./fibreglass/dashboard/scripts/Bluetooth --toggle &" :name "Bluetooth")
      )
    (box :orientation "h"
      :spacing 15
      (tool_single :status "${night_status}" :tooltip "Nightmode toggle" :icon "${night_icon}" :exec "./fibreglass/dashboard/scripts/Nightmode --toggle &" :name "Nightmode")
      (tool_single :status "${dnd_status}" :tooltip "DND toggle" :icon "${dnd_icon}" :exec "./fibreglass/dashboard/scripts/DND --toggle &" :name "Do Not Disturb")
    )
  )
)

(defwidget slidersdb []
  (box :orientation "v"
    :space-evenly "false"
    :spacing 10
    :class "sliders-box"
    (box :orientation "v"
      :space-evenly "false"
      (label :halign "start" :class "sliders-text" :text "Volume")
      (scale :min 0
        :max 101
        :class "sliders-volume-db"
        :orientation "h"
        :value sliders-volume
        :width 400
        :height 10
        :marks true
        :tooltip "Volume: ${sliders-volume}%"
        :onchange "amixer set Master {}%"
      )
    )
    (box :orientation "v"
      :space-evenly "false"
      (label :halign "start" :class "sliders-text" :text "Brightness")
      (scale :min 0
        :max 101
        :class "sliders-brightness-db"
        :orientation "h"
        :value sliders-brightness
        :width 400
        :height 10
        :marks true
        :tooltip "Volume: ${sliders-brightness}%"
        :onchange "brightnessctl set {}%"
      )
    )
  )
)


(defwidget musicboxdb []
  (box :orientation "v"
    :space-evenly "false"
    :class "music-box-db"
    (box :orientation "h"
      :class "music-box-two-db"
      :spacing 9
      :space-evenly "false"
      (overlay
        (box :style "background-image: linear-gradient(to top, rgba(16, 16, 18, 0.7), rgba(0, 0, 0, 0)), url('${music-cover}');"
            :class "music-cover-db"
            :halign "start"
            :valign "center"
        )
        (box :orientation "v"
          :width 220
          :space-evenly "false"
          :spacing 7
          :halign "start"
          :valign "end"
          :style "margin-left: .7em; margin-bottom: 1em;"
          (scroll :hscroll "true"
            :vscroll "false"
            :width 350
            (label :halign "start" :class "music-title" :text music-title)
          )
          (label :halign "start" :class "music-artist" :text music-artist)
        )
      )
      (box :orientation "v"
        :class "music-buttons-box"
        (button :halign "center" :valign "end" :class "music-nextback-button" 
          :onclick "./fibreglass/dashboard/scripts/music --back"
          :style "background-image: url('/home/catdealer/.config/eww/fibreglass/dashboard/assets/previous.png')"
        )
        (button :halign "center" :valign "end" :class "music-play-button" 
          :onclick "./fibreglass/dashboard/scripts/music --toggle &"
          :style "background-image: url('${playing-icon}');"
        )
        (button :halign "center" :valign "end" :class "music-nextback-button" 
          :onclick "./fibreglass/dashboard/scripts/music --next"
          :style "background-image: url('/home/catdealer/.config/eww/fibreglass/dashboard/assets/next.png')"
        )
      )
    )
  )
)

(defwidget contentdb []
  (box :orientation "v"
    :space-evenly "false"
    :class "db-main-box"
    :spacing 7
    (musicboxdb)
    (box :orientation "h"
      :class "seperator-box"
      "---"
    )
    (topdb)
    (slidersdb)
    (toolsdb)
  )
)

(defwidget hoverlostdb []
  (eventbox :onhoverlost "./bar/scripts/open_dashboard.sh &"
    :style "background-color: transparent;"
    (contentdb)
  )
)

(defwindow dashboard
  :monitor 1 
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x "-1.5%"
              :y "-7.4%"
              :width "30px"
              :height "60%"
              :anchor "bottom right")
  (contentdb)
)

